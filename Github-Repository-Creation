NEW REPOSITORY CREATION : 

…or create a new repository on the command line
echo "# Cheetah-Photo-Editor" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Sushant-Chauhan/Cheetah-Photo-Editor.git
git push -u origin main


…or push an existing repository from the command line
git remote add origin https://github.com/Sushant-Chauhan/Cheetah-Photo-Editor.git
git branch -M main
git push -u origin main

------------------------------------------------------------------------------------------------------

LATER CHANGES : To push your code to GitHub after making changes, you can follow these steps:

1. Add and Commit Changes- :

- First, stage your changes using the following command:
>>    git add .
    
- Next, commit your changes with a descriptive message: 
>>    git commit -m "commit message"
    

2. Changes to GitHub :
- Once your changes are staged and committed, you can push them to the remote repository on GitHub using:
>>    git push origin main
    
- This command will push your committed changes from the local `main` branch to the `main` branch on the remote 
  repository (assuming the branch is named `main`).

Before pushing, ensure that you are in the correct local repository directory and that the remote URL is set up correctly. 


------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------

Error Cases : 

1. 
Code :
C:\Users\SUSHANT CHAUHAN\Desktop\MAIN\Vs Code Shortcuts>git remote add origin https://github.com/Sushant-Chauhan/VS-Code-Shortcuts.git
error: remote origin already exists.

SOLUTION : 
==========
 The error message "error: remote origin already exists" indicates that a remote named `origin` has already been set up in your local Git repository. This error occurs because you are trying to add a remote with the name `origin` again, which is not allowed as it already exists.

To resolve this issue, you have a couple of options:

### Option 1: Update the Existing Remote URL
If the remote URL needs to be updated, you can update the existing remote URL for the `origin` remote using the following command:
```bash
git remote set-url origin https://github.com/Sushant-Chauhan/VS-Code-Shortcuts.git
```

### Option 2: Remove the Existing Remote and Re-Add
If you want to remove the existing `origin` remote and then add it again with the correct URL, you can follow these steps:

1. Remove the existing `origin` remote:
   ```bash
   git remote remove origin
   ```

2. Add the `origin` remote with the correct URL:
   ```bash
   git remote add origin https://github.com/Sushant-Chauhan/VS-Code-Shortcuts.git
   ```

### Option 3: Verify Remote Information
You can also verify the remote details using the following command:
```bash
git remote -v
```
This command will display the fetch and push URLs associated with each remote in your repository.

After making the necessary adjustments based on the above options, you should be able to proceed with pushing your code to the remote repository. Feel free to try one of the options above and let me know if you encounter any further issues.  

------------------------------------------------------------------------------------------------------

2. 
Code
C:\Users\SUSHANT CHAUHAN\Desktop\MAIN\Typescript> git push -u origin main
To https://github.com/Sushant-Chauhan/Typescript.git
 ! [rejected]        main -> main (non-fast-forward)

error: 
failed to push some refs to 'https://github.com/Sushant-Chauhan/Typescript.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.


SOLUTION : 
=========

 The error message you received, "! [rejected] main -> main (non-fast-forward)" along with the hints indicates that the remote repository has changes that you need to pull into your local repository before you can push your changes without conflicts.

To resolve this issue, you can follow these steps:

1. **Pull Remote Changes**:
   - Use the `git pull` command to fetch and integrate the changes from the remote repository into your local repository. This will update your local `main` branch to match the remote `main` branch.
     ```
     git pull origin main
     ```

2. **Resolve any Merge Conflicts**:
   - If there are any merge conflicts during the `git pull` operation, you will need to resolve them. Once resolved, proceed with the following steps.

3. **Push Changes**:
   - After pulling and resolving any conflicts, you can push your changes to the remote repository using the following command:
     ```
     git push origin main
     ```

By following these steps, you should be able to sync your local `main` branch with the remote `main` branch by pulling the changes and then pushing your changes without encountering the non-fast-forward rejection. If you have any further questions or need more assistance, please feel free to ask!  
------------------------------------------------------------------------------------------------------

